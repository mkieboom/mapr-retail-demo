---
  # mapr-retail-demo MapR Volume
  - name: Create the 'mapr-retail-demo' volume
    shell: maprcli volume create -name mapr-retail-demo -path /mapr-retail-demo
    register: command_result
    failed_when: "command_result.rc != 0 and 'already in use' not in command_result.stdout"

  # MapR-DB table: devices
  - name: Create the 'devices' MapR-DB JSON table
    shell: maprcli table create -path /mapr-retail-demo/devices-db -tabletype json
    register: command_result
    failed_when: "command_result.rc != 0 and 'File exists' not in command_result.stdout"
  - name: Open the 'devices' MapR-DB JSON table
    shell: maprcli table cf edit -path /mapr-retail-demo/devices-db -cfname default -readperm p -writeperm p -traverseperm  p
    register: command_result
    failed_when: "command_result.rc != 0 and 'File exists' not in command_result.stdout"

  # MapR Event Stream: devices
  - name: Create the 'devices' MapR Event Stream
    shell: maprcli stream create -path /mapr-retail-demo/devices-stream -produceperm p -consumeperm p -topicperm p
    register: command_result
    failed_when: "command_result.rc != 0 and 'already exists' not in command_result.stdout"
  - name: Create the 'devices' MapR Event Stream
    shell: maprcli stream topic create -path /mapr-retail-demo/devices-stream -topic devices -partitions 3
    register: command_result
    failed_when: "command_result.rc != 0 and 'already exists' not in command_result.stdout"

  # MapR-DB table: sensors-connecteddevices
  - name: Create the 'sensors' MapR-DB JSON table
    shell: maprcli table create -path /mapr-retail-demo/sensors-connecteddevices-db -tabletype json
    register: command_result
    failed_when: "command_result.rc != 0 and 'File exists' not in command_result.stdout"
  - name: Open the 'sensors' MapR-DB JSON table
    shell: maprcli table cf edit -path /mapr-retail-demo/sensors-connecteddevices-db -cfname default -readperm p -writeperm p -traverseperm  p
    register: command_result
    failed_when: "command_result.rc != 0 and 'File exists' not in command_result.stdout"

  # MapR Event Stream: sensors-connecteddevices
  - name: Create the 'sensors' MapR Event Stream
    shell: maprcli stream create -path /mapr-retail-demo/sensors-connecteddevices-stream -produceperm p -consumeperm p -topicperm p
    register: command_result
    failed_when: "command_result.rc != 0 and 'already exists' not in command_result.stdout"
  - name: Create the 'sensors' MapR Event Stream
    shell: maprcli stream topic create -path /mapr-retail-demo/sensors-connecteddevices-stream -topic sensors -partitions 3
    register: command_result
    failed_when: "command_result.rc != 0 and 'already exists' not in command_result.stdout"

